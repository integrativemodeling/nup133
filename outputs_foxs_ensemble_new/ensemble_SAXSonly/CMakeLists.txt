# Autogenerated file, run tools/build/setup_cmake.py to regenerate

project(IMP.ensemble)

imp_get_process_exit_code("setup_application ensemble" status ${CMAKE_BINARY_DIR}
                          COMMAND ${CMAKE_SOURCE_DIR}/tools/build/setup_application.py
                          --name=ensemble
                          --datapath=${IMP_DATAPATH}
                           --source=${CMAKE_SOURCE_DIR})
if(${status} EQUAL 0)
include_directories(${ANN_INCLUDE_PATH}
        ${BOOST.FILESYSTEM_INCLUDE_PATH}
        ${BOOST.PROGRAMOPTIONS_INCLUDE_PATH}
        ${BOOST.RANDOM_INCLUDE_PATH}
        ${BOOST.REGEX_INCLUDE_PATH}
        ${BOOST.SYSTEM_INCLUDE_PATH}
        ${CGAL_INCLUDE_PATH}
        ${GPERFTOOLS_INCLUDE_PATH}
        ${HDF5_INCLUDE_PATH}
        ${TCMALLOC_HEAPCHECKER_INCLUDE_PATH}
        ${TCMALLOC_HEAPPROFILER_INCLUDE_PATH} ${CMAKE_SOURCE_DIR}/applications/ensemble/lib)
link_directories(${ANN_LINK_PATH}
        ${BOOST.FILESYSTEM_LINK_PATH}
        ${BOOST.PROGRAMOPTIONS_LINK_PATH}
        ${BOOST.RANDOM_LINK_PATH}
        ${BOOST.REGEX_LINK_PATH}
        ${BOOST.SYSTEM_LINK_PATH}
        ${CGAL_LINK_PATH}
        ${GPERFTOOLS_LINK_PATH}
        ${HDF5_LINK_PATH}
        ${TCMALLOC_HEAPCHECKER_LINK_PATH}
        ${TCMALLOC_HEAPPROFILER_LINK_PATH})
add_definitions("-DIMP_EXECUTABLE")


   add_executable("IMP.ensemble-foxs_ensemble" ${CMAKE_SOURCE_DIR}/applications/ensemble/foxs_ensemble.cpp
${CMAKE_SOURCE_DIR}/applications/ensemble/lib/EnsembleGenerator.cpp
${CMAKE_SOURCE_DIR}/applications/ensemble/lib/ExaustiveEnsembleGenerator.cpp
${CMAKE_SOURCE_DIR}/applications/ensemble/lib/ProfileClustering.cpp
${CMAKE_SOURCE_DIR}/applications/ensemble/lib/SAXSEnsembleScore.cpp
${CMAKE_SOURCE_DIR}/applications/ensemble/lib/stat_helpers.cpp)
   target_link_libraries(IMP.ensemble-foxs_ensemble
    ${IMP_base_LIBRARY}
${IMP_atom_LIBRARY}
${IMP_saxs_LIBRARY}
${IMP_benchmark_LIBRARY}
${IMP_base_LIBRARY}
${IMP_cgal_LIBRARY}
${IMP_algebra_LIBRARY}
${IMP_kernel_LIBRARY}
${IMP_display_LIBRARY}
${IMP_score_functor_LIBRARY}
${IMP_core_LIBRARY}
${IMP_container_LIBRARY}
${IMP_atom_LIBRARY}
    ${BOOST.FILESYSTEM_LIBRARIES}
${BOOST.PROGRAMOPTIONS_LIBRARIES}
${BOOST.SYSTEM_LIBRARIES}
${GPERFTOOLS_LIBRARIES}
${TCMALLOC_HEAPPROFILER_LIBRARIES}
${TCMALLOC_HEAPCHECKER_LIBRARIES}
${BOOST.RANDOM_LIBRARIES}
${BOOST.REGEX_LIBRARIES}
${CGAL_LIBRARIES}
${ANN_LIBRARIES}
${HDF5_LIBRARIES}
${BOOST.PROGRAMOPTIONS_LIBRARIES})
   set_target_properties(IMP.ensemble-foxs_ensemble PROPERTIES OUTPUT_NAME foxs_ensemble RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")
   set_property(TARGET "IMP.ensemble-foxs_ensemble" PROPERTY FOLDER "IMP.ensemble")
   install(TARGETS IMP.ensemble-foxs_ensemble DESTINATION ${CMAKE_INSTALL_BINDIR})
   set(bins ${bins} IMP.ensemble-foxs_ensemble)


   add_executable("IMP.ensemble-nnls_test" ${CMAKE_SOURCE_DIR}/applications/ensemble/nnls_test.cpp
${CMAKE_SOURCE_DIR}/applications/ensemble/lib/EnsembleGenerator.cpp
${CMAKE_SOURCE_DIR}/applications/ensemble/lib/ExaustiveEnsembleGenerator.cpp
${CMAKE_SOURCE_DIR}/applications/ensemble/lib/ProfileClustering.cpp
${CMAKE_SOURCE_DIR}/applications/ensemble/lib/SAXSEnsembleScore.cpp
${CMAKE_SOURCE_DIR}/applications/ensemble/lib/stat_helpers.cpp)
   target_link_libraries(IMP.ensemble-nnls_test
    ${IMP_base_LIBRARY}
${IMP_atom_LIBRARY}
${IMP_saxs_LIBRARY}
${IMP_benchmark_LIBRARY}
${IMP_base_LIBRARY}
${IMP_cgal_LIBRARY}
${IMP_algebra_LIBRARY}
${IMP_kernel_LIBRARY}
${IMP_display_LIBRARY}
${IMP_score_functor_LIBRARY}
${IMP_core_LIBRARY}
${IMP_container_LIBRARY}
${IMP_atom_LIBRARY}
    ${BOOST.FILESYSTEM_LIBRARIES}
${BOOST.PROGRAMOPTIONS_LIBRARIES}
${BOOST.SYSTEM_LIBRARIES}
${GPERFTOOLS_LIBRARIES}
${TCMALLOC_HEAPPROFILER_LIBRARIES}
${TCMALLOC_HEAPCHECKER_LIBRARIES}
${BOOST.RANDOM_LIBRARIES}
${BOOST.REGEX_LIBRARIES}
${CGAL_LIBRARIES}
${ANN_LIBRARIES}
${HDF5_LIBRARIES}
${BOOST.PROGRAMOPTIONS_LIBRARIES})
   set_target_properties(IMP.ensemble-nnls_test PROPERTIES OUTPUT_NAME nnls_test RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")
   set_property(TARGET "IMP.ensemble-nnls_test" PROPERTY FOLDER "IMP.ensemble")
   install(TARGETS IMP.ensemble-nnls_test DESTINATION ${CMAKE_INSTALL_BINDIR})
   set(bins ${bins} IMP.ensemble-nnls_test)


   add_executable("IMP.ensemble-split_to_jobs" ${CMAKE_SOURCE_DIR}/applications/ensemble/split_to_jobs.cpp
${CMAKE_SOURCE_DIR}/applications/ensemble/lib/EnsembleGenerator.cpp
${CMAKE_SOURCE_DIR}/applications/ensemble/lib/ExaustiveEnsembleGenerator.cpp
${CMAKE_SOURCE_DIR}/applications/ensemble/lib/ProfileClustering.cpp
${CMAKE_SOURCE_DIR}/applications/ensemble/lib/SAXSEnsembleScore.cpp
${CMAKE_SOURCE_DIR}/applications/ensemble/lib/stat_helpers.cpp)
   target_link_libraries(IMP.ensemble-split_to_jobs
    ${IMP_base_LIBRARY}
${IMP_atom_LIBRARY}
${IMP_saxs_LIBRARY}
${IMP_benchmark_LIBRARY}
${IMP_base_LIBRARY}
${IMP_cgal_LIBRARY}
${IMP_algebra_LIBRARY}
${IMP_kernel_LIBRARY}
${IMP_display_LIBRARY}
${IMP_score_functor_LIBRARY}
${IMP_core_LIBRARY}
${IMP_container_LIBRARY}
${IMP_atom_LIBRARY}
    ${BOOST.FILESYSTEM_LIBRARIES}
${BOOST.PROGRAMOPTIONS_LIBRARIES}
${BOOST.SYSTEM_LIBRARIES}
${GPERFTOOLS_LIBRARIES}
${TCMALLOC_HEAPPROFILER_LIBRARIES}
${TCMALLOC_HEAPCHECKER_LIBRARIES}
${BOOST.RANDOM_LIBRARIES}
${BOOST.REGEX_LIBRARIES}
${CGAL_LIBRARIES}
${ANN_LIBRARIES}
${HDF5_LIBRARIES}
${BOOST.PROGRAMOPTIONS_LIBRARIES})
   set_target_properties(IMP.ensemble-split_to_jobs PROPERTIES OUTPUT_NAME split_to_jobs RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")
   set_property(TARGET "IMP.ensemble-split_to_jobs" PROPERTY FOLDER "IMP.ensemble")
   install(TARGETS IMP.ensemble-split_to_jobs DESTINATION ${CMAKE_INSTALL_BINDIR})
   set(bins ${bins} IMP.ensemble-split_to_jobs)


set(pybins )
foreach (pybin ${pybins})
  install(PROGRAMS ${pybin} DESTINATION ${CMAKE_INSTALL_BINDIR})
endforeach(pybin)

math(EXPR expensive_timeout "${IMP_TIMEOUT_FACTOR} * 120")

set(pytests ${CMAKE_SOURCE_DIR}/applications/ensemble/test/test_example.py)
foreach (test ${pytests})
  GET_FILENAME_COMPONENT(name ${test} NAME)
  add_test("IMP.ensemble-${name}" ${IMP_TEST_SETUP} python ${test})
  set_tests_properties("IMP.ensemble-${name}" PROPERTIES LABELS "IMP.ensemble;test")
  set_tests_properties("IMP.ensemble-${name}" PROPERTIES TIMEOUT ${expensive_timeout})
  set_tests_properties("IMP.ensemble-${name}" PROPERTIES COST 3)
endforeach(test)

if(IMP_DOXYGEN_FOUND)
# documentation

file(GLOB docs ${CMAKE_SOURCE_DIR}/applications/ensemble/*.dox
               ${CMAKE_SOURCE_DIR}/applications/ensemble/*.md)

add_custom_command(OUTPUT ${CMAKE_BINARY_DIR}/doxygen/ensemble/tags ${CMAKE_BINARY_DIR}/doc/html/ensemble/index.html
   COMMAND mkdir -p doc/html
   COMMAND ${IMP_DOXYGEN_EXECUTABLE} ../../doxygen/ensemble/Doxyfile
   COMMAND ${CMAKE_SOURCE_DIR}/tools/build/doxygen_patch_tags.py --module=ensemble --file=../../doxygen/ensemble/tags
   COMMAND ${CMAKE_SOURCE_DIR}/tools/build/doxygen_show_warnings.py --warn=../../doxygen/ensemble/warnings.txt
   DEPENDS ${IMP_base_DOC}
${IMP_atom_DOC}
${IMP_saxs_DOC}
${IMP_benchmark_DOC}
${IMP_base_DOC}
${IMP_cgal_DOC}
${IMP_algebra_DOC}
${IMP_kernel_DOC}
${IMP_display_DOC}
${IMP_score_functor_DOC}
${IMP_core_DOC}
${IMP_container_DOC}
${IMP_atom_DOC} ${docs}
   WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/doxygen/ensemble/
   COMMENT "Running doxygen on ensemble")

add_custom_target("IMP.ensemble-doc" ALL DEPENDS ${CMAKE_BINARY_DIR}/doxygen/ensemble/tags)
set_property(TARGET "IMP.ensemble-doc" PROPERTY FOLDER "IMP.ensemble")

set(IMP_ensemble_DOC "IMP.ensemble-doc" CACHE INTERNAL "" FORCE)

set(IMP_DOC_DEPENDS ${IMP_DOC_DEPENDS} ${IMP_ensemble_DOC} CACHE INTERNAL "" FORCE)
endif(IMP_DOXYGEN_FOUND)

add_custom_target(IMP.ensemble DEPENDS
  ${IMP_base}
${IMP_atom}
${IMP_saxs}
${IMP_benchmark}
${IMP_base}
${IMP_cgal}
${IMP_algebra}
${IMP_kernel}
${IMP_display}
${IMP_score_functor}
${IMP_core}
${IMP_container}
${IMP_atom}
  ${bins})
set_property(TARGET "IMP.ensemble" PROPERTY FOLDER "IMP.ensemble")

elseif(${status} EQUAL 1)
message("Application ensemble disabled")
else()
message(FATAL_ERROR "setup_application failed ${status}")
endif()
